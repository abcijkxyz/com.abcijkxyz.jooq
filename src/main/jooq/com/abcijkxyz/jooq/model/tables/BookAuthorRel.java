/**
 * This class is generated by jOOQ
 */
package com.abcijkxyz.jooq.model.tables;


import com.abcijkxyz.jooq.model.Keys;
import com.abcijkxyz.jooq.model.Mydb;
import com.abcijkxyz.jooq.model.tables.records.BookAuthorRelRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookAuthorRel extends TableImpl<BookAuthorRelRecord> {

	private static final long serialVersionUID = 1629727859;

	/**
	 * The reference instance of <code>mydb.book_author_rel</code>
	 */
	public static final BookAuthorRel BOOK_AUTHOR_REL = new BookAuthorRel();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BookAuthorRelRecord> getRecordType() {
		return BookAuthorRelRecord.class;
	}

	/**
	 * The column <code>mydb.book_author_rel.bookid</code>.
	 */
	public final TableField<BookAuthorRelRecord, Long> BOOKID = createField("bookid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>mydb.book_author_rel.authorid</code>.
	 */
	public final TableField<BookAuthorRelRecord, Long> AUTHORID = createField("authorid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>mydb.book_author_rel</code> table reference
	 */
	public BookAuthorRel() {
		this("book_author_rel", null);
	}

	/**
	 * Create an aliased <code>mydb.book_author_rel</code> table reference
	 */
	public BookAuthorRel(String alias) {
		this(alias, BOOK_AUTHOR_REL);
	}

	private BookAuthorRel(String alias, Table<BookAuthorRelRecord> aliased) {
		this(alias, aliased, null);
	}

	private BookAuthorRel(String alias, Table<BookAuthorRelRecord> aliased, Field<?>[] parameters) {
		super(alias, Mydb.MYDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BookAuthorRelRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BookAuthorRelRecord, ?>>asList(Keys.BOOK_AUTHOR_REL_IBFK_1, Keys.BOOK_AUTHOR_REL_IBFK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BookAuthorRel as(String alias) {
		return new BookAuthorRel(alias, this);
	}

	/**
	 * Rename this table
	 */
	public BookAuthorRel rename(String name) {
		return new BookAuthorRel(name, null);
	}
}
